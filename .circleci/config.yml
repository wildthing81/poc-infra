# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

references:
  main_only: &main_only
    filters:
      branches:
        only: main

  staging_only: &staging_only
    filters:
      branches:
        only: staging

  dev_only: &dev_only
    filters:
      branches:
        only: develop

orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
  terraform: circleci/terraform@2.0.2

# Orchestrate or schedule a set of jobs
jobs:
  shared-resources:
    executor: terraform/default
    steps:
      - checkout
      - terraform/init:
          path: ./shared
      - terraform/plan:
          path: ./shared
          workspace: shared
      - terraform/apply:
          path: ./shared
          workspace: shared

  init-and-plan:
    #executor: terraform/default
    docker:
      - image: hashicorp/terraform:light
    parameters:
      env:
        type: string
        default: dev
    steps:
      - checkout
      - run:
          name: terraform validate
          command: |
            terraform init -input=false -backend=false -no-color
            terraform validate -no-color
      - run:
          name: terraform init
          command:  |
            terraform init -backend-config="access_key=${TF_VAR_access_key}" \
            -backend-config="secret_key=${TF_VAR_secret_key}"
      - run:
          name: terraform plan
          command: |
            terraform workspace select -no-color << parameters.env >>
            terraform plan -input=false -no-color -out=plan.out \
            -var "stage=<< parameters.env >>"
      #- terraform/plan:
      #    var: 'stage=<< parameters.env >>'
      #    workspace: << parameters.env >>
      - persist_to_workspace:
          root: .
          paths:
              - .

  provision-resources:
    #executor: terraform/default
    docker:
      - image: hashicorp/terraform:light
    parameters:
      env:
        type: string
        default: dev
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            terraform workspace select -no-color << parameters.env >>
            terraform apply -auto-approve -var "stage=<< parameters.env >>"
#      - terraform/apply:
#          var: 'stage=<< parameters.env >>'
#          workspace: << parameters.env >>

  dropDatabase:
    docker:
      - image: hashicorp/terraform:light
    parameters:
      env:
        type: string
        default: dev
    steps:
      - checkout
      - run:
          name: terraform destroy
          command: |
            terraform init
            terraform workspace select -no-color << parameters.env >>
            terraform destroy -input=false -auto-approve -lock-timeout=300s \
            -target=module.backend.aws_rds_cluster.main -var "stage=<< parameters.env >>"

workflows:
  devProvision:
    # Run the welcome/run job in its own container
    jobs:
      - init-and-plan:
          env: dev
      - provision-resources:
          <<: *dev_only
          requires:
            - init-and-plan
          env: dev
  stagingProvision:
    jobs:
      - init-and-plan:
          env: stag
      - provision-resources:
          <<: *staging_only
          requires:
            - init-and-plan
          env: stag
  devRecreateDb:
    jobs:
      - welcome/run:
          type: approval
      - dropDatabase:
          requires:
            - welcome/run
          env: dev
      - init-and-plan:
          requires:
            - dropDatabase
          env: dev
      - provision-resources:
          requires:
            - init-and-plan
          env: dev
